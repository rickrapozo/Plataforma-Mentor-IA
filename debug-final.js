// SCRIPT FINAL DE DEBUG - Cole no console ap√≥s recarregar a p√°gina

console.log('üöÄ Iniciando debug final...');

// Aguardar um pouco para garantir que o componente carregou
setTimeout(() => {
  console.log('üîç Verificando objetos globais...');
  
  // Verificar youtubeService
  if (typeof window.youtubeService !== 'undefined') {
    console.log('‚úÖ youtubeService encontrado!');
    console.log('üìã M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(window.youtubeService)));
  } else {
    console.error('‚ùå youtubeService n√£o encontrado');
  }
  
  // Verificar supabase
  if (typeof window.supabase !== 'undefined') {
    console.log('‚úÖ supabase encontrado!');
    console.log('üìã Objeto supabase:', window.supabase);
    
    // Testar conex√£o com banco
    testDatabase();
  } else {
    console.error('‚ùå supabase n√£o encontrado');
    console.log('üí° Aguarde o carregamento do componente ou recarregue a p√°gina');
  }
}, 2000);

async function testDatabase() {
  console.log('üîç Testando conex√£o com banco de dados...');
  
  try {
    const categories = ['audiobook', 'podcast', 'lecture'];
    let totalVideos = 0;
    
    for (const category of categories) {
      const { data, error, count } = await window.supabase
        .from('youtube_videos')
        .select('*', { count: 'exact' })
        .eq('category', category)
        .limit(1);
      
      if (error) {
        console.error(`‚ùå Erro ao buscar ${category}:`, error);
      } else {
        const videoCount = count || 0;
        totalVideos += videoCount;
        console.log(`üìä ${category}: ${videoCount} v√≠deos`);
        
        if (data && data.length > 0) {
          console.log(`   Exemplo: "${data[0].title}"`);
        }
      }
    }
    
    console.log(`üìà Total de v√≠deos: ${totalVideos}`);
    
    if (totalVideos === 0) {
      console.log('‚ö†Ô∏è Banco vazio! Executando busca autom√°tica...');
      
      // For√ßar atualiza√ß√£o autom√°tica
      if (window.youtubeService && window.youtubeService.forceUpdateAllCategories) {
        console.log('üîÑ Iniciando busca de v√≠deos...');
        await window.youtubeService.forceUpdateAllCategories();
        console.log('‚úÖ Busca conclu√≠da! Recarregue a p√°gina para ver os resultados.');
      }
    } else {
      console.log('‚úÖ Banco de dados OK! A aplica√ß√£o deve estar funcionando.');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
}