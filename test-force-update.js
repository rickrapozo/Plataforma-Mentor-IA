// Script para testar e for√ßar atualiza√ß√£o do YouTube
// Cole este c√≥digo no console do navegador em http://localhost:8080/mindset

async function testForceUpdate() {
  console.log('üöÄ Testando for√ßar atualiza√ß√£o do YouTube...');
  
  try {
    // Verificar se youtubeService e supabase est√£o dispon√≠veis
    if (typeof window.youtubeService === 'undefined') {
      console.error('‚ùå youtubeService n√£o encontrado. Recarregue a p√°gina.');
      return;
    }
    
    if (typeof window.supabase === 'undefined') {
      console.error('‚ùå supabase n√£o encontrado. Recarregue a p√°gina.');
      return;
    }
    
    console.log('‚úÖ youtubeService e supabase encontrados!');
    
    // Verificar v√≠deos atuais no banco
    console.log('üîç Verificando v√≠deos atuais no banco...');
    const categories = ['audiobook', 'podcast', 'lecture'];
    
    for (const category of categories) {
      const { data, error } = await window.supabase
        .from('youtube_videos')
        .select('count')
        .eq('category', category);
      
      if (error) {
        console.error(`‚ùå Erro ao verificar ${category}:`, error);
      } else {
        console.log(`üìä ${category}: ${data?.length || 0} v√≠deos no banco`);
      }
    }
    
    // Perguntar se deseja for√ßar atualiza√ß√£o
    const forceUpdate = confirm('Deseja for√ßar a atualiza√ß√£o de todas as categorias? Isso pode levar alguns minutos e usar quota da API do YouTube.');
    
    if (!forceUpdate) {
      console.log('‚ùå Atualiza√ß√£o cancelada pelo usu√°rio.');
      return;
    }
    
    console.log('üîÑ Iniciando atualiza√ß√£o for√ßada...');
    
    // For√ßar atualiza√ß√£o de todas as categorias
    await window.youtubeService.forceUpdateAllCategories();
    
    console.log('‚úÖ Atualiza√ß√£o for√ßada conclu√≠da!');
    
    // Verificar novamente os v√≠deos no banco
    console.log('üîç Verificando v√≠deos ap√≥s atualiza√ß√£o...');
    
    for (const category of categories) {
      const { data, error } = await window.supabase
        .from('youtube_videos')
        .select('count')
        .eq('category', category);
      
      if (error) {
        console.error(`‚ùå Erro ao verificar ${category}:`, error);
      } else {
        console.log(`üìä ${category}: ${data?.length || 0} v√≠deos no banco (ap√≥s atualiza√ß√£o)`);
      }
    }
    
    // Recarregar a p√°gina para ver os novos v√≠deos
    const reload = confirm('Atualiza√ß√£o conclu√≠da! Deseja recarregar a p√°gina para ver os novos v√≠deos?');
    if (reload) {
      window.location.reload();
    }
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  }
}

// Executar automaticamente
testForceUpdate();